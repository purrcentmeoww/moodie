stages:
  - build
  - test
  - deploy

variables:
  DOCKER_IMAGE_NAME: team20-llm-engine
  HOST_PORT: 3000
  CONTAINER_PORT: 3030

before_script:
  - echo "üîß Preparing CI/CD pipeline..."

build-image:
  stage: build
  script:
    - echo "üöÄ Building Docker image..."
    - docker build -t $DOCKER_IMAGE_NAME ./backend_ai || { echo "‚ùå Docker build failed"; exit 1; }

test-image:
  stage: test
  script:
    - echo "üß™ Running container for testing..."
    - docker run -d -p $HOST_PORT:$CONTAINER_PORT --name test-$DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME
    - sleep 3  # wait for container to boot
    - echo "üì° Hitting /predict API..."
    - |
      if curl -s -X POST http://localhost:$HOST_PORT/predict \
        -H "Content-Type: application/json" \
        -d '{"text":"‡∏â‡∏±‡∏ô‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å"}' | grep -q "predicted_label"
      then
        echo "‚úÖ API test passed"
      else
        echo "‚ùå API test failed"
        docker logs test-$DOCKER_IMAGE_NAME
        exit 1
      fi
    - docker stop test-$DOCKER_IMAGE_NAME
    - docker rm test-$DOCKER_IMAGE_NAME

deploy-service:
  stage: deploy
  script:
    - echo "üì¶ Deploying container..."
    - docker-compose down || true  # ‡πÑ‡∏°‡πà‡∏•‡πâ‡∏°‡πÅ‡∏°‡πâ stop ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    - docker-compose up -d --build || { echo "‚ùå Docker Compose deploy failed"; exit 1; }
    - echo "‚úÖ Deployment completed"

tags:
  - hackathon-siamai4
